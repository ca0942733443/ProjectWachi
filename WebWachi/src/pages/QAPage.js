import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { db } from "../firebase";
import { doc, getDocs, updateDoc, collection, query, where, getDoc } from "firebase/firestore";

const QAPage = () => {
  const { classId } = useParams();
  const navigate = useNavigate();
  const [questionNo, setQuestionNo] = useState("");
  const [questionText, setQuestionText] = useState("");
  const [currentCno, setCurrentCno] = useState(null);
  const [questionActive, setQuestionActive] = useState(false); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
  useEffect(() => {
    const fetchCurrentCheckin = async () => {
      const q = query(collection(db, `classroom/${classId}/checkin`), where("status", "==", 1));
      const querySnapshot = await getDocs(q);

      if (!querySnapshot.empty) {
        // ‚úÖ ‡∏î‡∏∂‡∏á CNO ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
        const checkinDoc = querySnapshot.docs[0];
        setCurrentCno(checkinDoc.id);

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const questionRef = doc(db, `classroom/${classId}/checkin/${checkinDoc.id}`);
        const questionSnap = await getDoc(questionRef);
        if (questionSnap.exists() && questionSnap.data().question_show) {
          setQuestionActive(true);
        } else {
          setQuestionActive(false);
        }
      } else {
        setCurrentCno(null);
        setQuestionActive(false);
      }
    };

    fetchCurrentCheckin();
  }, [classId]);

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
  const handleAddQuestion = async () => {
    if (!currentCno) {
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà!");
      return;
    }

    if (!questionNo || !questionText) {
      alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    const questionRef = doc(db, `classroom/${classId}/checkin/${currentCno}`);
    await updateDoc(questionRef, {
      question_no: parseInt(questionNo),
      question_text: questionText,
      question_show: true,
    });

    setQuestionNo("");
    setQuestionText("");
    setQuestionActive(true); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    alert("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
  const handleCloseQuestion = async () => {
    if (!currentCno) {
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà!");
      return;
    }

    if (!questionActive) {
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà!");
      return;
    }

    const questionRef = doc(db, `classroom/${classId}/checkin/${currentCno}`);
    await updateDoc(questionRef, {
      question_show: false,
    });

    setQuestionActive(false); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß
    alert("‚úÖ ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
  };

  return (
    <div className="container mt-5">
      <h1 className="mb-4">üì¢ ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö</h1>

      {currentCno ? (
        <>
          <p>üìå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà #{currentCno}</p>
          <input
            type="text"
            className="form-control mb-2"
            placeholder="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°"
            value={questionNo}
            onChange={(e) => setQuestionNo(e.target.value)}
          />
          <input
            type="text"
            className="form-control mb-2"
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
            value={questionText}
            onChange={(e) => setQuestionText(e.target.value)}
          />

          {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ñ‡∏≤‡∏° */}
          <button className="btn btn-primary me-2" onClick={handleAddQuestion}>
            ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ñ‡∏≤‡∏°
          </button>

          {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° */}
          {questionActive && (
            <button className="btn btn-danger" onClick={handleCloseQuestion}>
              ‚ùå ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
            </button>
          )}
        </>
      ) : (
        <p className="text-danger">‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà</p>
      )}

      <button className="btn btn-secondary mt-3" onClick={() => navigate(`/manage-class/${classId}`)}>
        üîô ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
      </button>
    </div>
  );
};

export default QAPage;
